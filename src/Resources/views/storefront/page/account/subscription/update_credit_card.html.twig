{% sw_extends '@Storefront/storefront/page/account/_page.html.twig' %}


{% block page_account_main_content %}


    {% block page_account_subscriptions %}
        <div class="account-subscriptions">
            {% block page_account_subscriptions_welcome %}
                <div class="account-welcome">
                    {% block page_account_subscriptions_welcome_headline %}
                        <h1>{{ "account.subscriptionsTitle"|trans|sw_sanitize }}</h1>
                        <p>{{ "account.subscriptionsWelcome"|trans|sw_sanitize }}</p>
                    {% endblock %}
                </div>
            {% endblock %}

            {% block page_account_subscriptions_main %}
                <div class="account-subscriptions-update-credit-card">
              
                            <!-- Display a payment form -->

                            <form id="payment-form">
                              <div id="error-message"></div>
                              <div id="payment-element">

                                <!--Stripe.js injects the Payment Element-->

                              </div>

                              <button id="submit">

                                <div class="spinner hidden" id="spinner"></div>

                                <span id="button-text">{{ "account.subscriptionsUpdateCreditCardButton"|trans|sw_sanitize }}</span>

                              </button>

                              <div id="payment-message" class="hidden"></div>

                            </form>


                        
                </div>
            {% endblock %}
        </div>
    {% endblock %}
{% endblock %}


{% block base_footer %}
    {{ parent() }}
    <script src="https://js.stripe.com/v3/"></script>

    <script>
        const options = {
            clientSecret: '{{client_secret}}',
        };
        const stripe = Stripe('{{ config('StripeShopwarePayment.config.stripePublicKey') }}'); 
        // Set up Stripe.js and Elements to use in checkout form, passing the client secret obtained in step 2
        const elements = stripe.elements(options);

        // Create and mount the Payment Element
        const paymentElement = elements.create('payment');
        paymentElement.mount('#payment-element');

    </script>

    <script>

    const form = document.getElementById('payment-form');

    form.addEventListener('submit', async (event) => {
      event.preventDefault();

      const {error} = await stripe.confirmSetup({
        //`Elements` instance that was used to create the Payment Element
        elements,
        confirmParams: {
          return_url: '{{ url }}{{ path('frontend.account.subscription.update_credit_card_confirm', {'subscriptionId': subscriptionId}) }}',
        }
      });

      if (error) {
        // This point will only be reached if there is an immediate error when
        // confirming the payment. Show error to your customer (for example, payment
        // details incomplete)
        const messageContainer = document.querySelector('#error-message');
        messageContainer.textContent = error.message;
      } else {
        // Your customer will be redirected to your `return_url`. For some payment
        // methods like iDEAL, your customer will be redirected to an intermediate
        // site first to authorize the payment, then redirected to the `return_url`.
      }
    });
    </script>

{% endblock %}
